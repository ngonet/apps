apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  labels:
    app: nodejs
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
      tier: backend
  template:
    metadata:
      labels:
        app: nodejs
        tier: backend
    spec:
      #      initContainers:
        # 1. Aplicación de migraciones
        #  - name: prisma-migrate
        #  image: ngoyarzo/nodejs-prisma:8.0
        #  command: ["npx", "prisma", "migrate", "deploy"]
        #  env:
        #   - name: DATABASE_URL
        #     valueFrom:
        #       secretKeyRef:
        #         name: prisma-db-url
        #         key: DATABASE_URL
        # volumeMounts:
        #   - name: prisma-cache
        #     mountPath: /app/node_modules/.prisma
        # 2. Ejecución de seeds
        #- name: prisma-seed
        # image: ngoyarzo/nodejs-prisma:8.0
        # command: ["npx", "prisma", "db", "seed"]
        # env:
        #   - name: DATABASE_URL
        #     valueFrom:
        #       secretKeyRef:
        #         name: prisma-db-url
        #         key: DATABASE_URL
        #  volumeMounts:
        #    - name: prisma-cache
        #      mountPath: /app/node_modules/.prisma
      containers:
        - name: nodejs
          image: ngoyarzo/nodejs-prisma:8.0
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: prisma-db-url
                  key: DATABASE_URL
          command: ["sh", "-c"]
          args:
            - "npx prisma generate && 
              npx prisma migrate dev --name init  && 
              node index.js"
          volumeMounts:
            #            - name: prisma-cache
            # mountPath: /app/node_modules/.prisma
            - name: data
              mountPath: /app/node_modules
      volumes:
        #  - name: prisma-cache
        # emptyDir: {}
        - name: data
          emptyDir: {}
