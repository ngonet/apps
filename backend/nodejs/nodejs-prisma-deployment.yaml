apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  labels:
    app: nodejs
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
      tier: backend
  template:
    metadata:
      labels:
        app: nodejs
        tier: backend
    spec:
      initContainers:
        # 1. Generación del cliente Prisma
        - name: prisma-generate
          image: ngoyarzo/nodejs-prisma:20.0
          command: ["npx", "prisma", "generate"]
          volumeMounts:
            - name: prisma-modules
              mountPath: /app/node_modules

        # 2. Aplicación de migraciones
        - name: prisma-migrate
          image: ngoyarzo/nodejs-prisma:20.0
          command: ["npx", "prisma", "migrate", "deploy"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: prisma-db-url
                  key: DATABASE_URL
          volumeMounts:
            - name: prisma-modules
              mountPath: /app/node_modules

      containers:
        - name: nodejs
          image: ngoyarzo/nodejs-prisma:20.0
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: prisma-db-url
                  key: DATABASE_URL
          command: ["node", "server.js"]
          volumeMounts:
            - name: prisma-modules
              mountPath: /app/node_modules
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 45
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10

      volumes:
        - name: prisma-modules
          emptyDir: {}
